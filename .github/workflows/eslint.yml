name: ESLint

on: [push]

env:
  CI_DIR: "common/scripts/ci"
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  generate-reports:
    if: github.repository != 'tmfg/digitraffic-cdk'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Git config user
        uses: snow-actions/git-config-user@v1.0.0
        with:
          name: Digitraffic CI
          email: digitraffic@solita.fi
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache pnpm store cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-rush-pnpm-store-${{ hashFiles('common/config/rush/repo-state.json') }}
          path: |
            common/temp/pnpm-store

      - name: Cache rush build
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-rush-build-${{ hashFiles('common/config/rush/repo-state.json') }}-${{ github.ref_name }}
          path: |
            common/temp/build-cache

      - name: Rush install
        run: node common/scripts/install-run-rush.js install

      - name: Create eslint reports
        run: node common/scripts/install-run-rush.js ci:eslint-report

      - name: Find report files
        id: reports
        shell: sh
        run: python ${{ env.CI_DIR }}/find-reports.py

      - name: Archive reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: ${{ github.ref_name }}/

  publish:
    needs: generate-reports
    runs-on: ubuntu-24.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          name: reports
          path: reports/${{ github.ref_name }}/

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports/

      - name: Deploy to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create summary
        shell: sh
        env:
          GITHUB_PAGES: ${{ steps.deployment.outputs.page_url }}
        run: python ${{ env.CI_DIR }}/create-summary.py
